/*
 * This file is generated by jOOQ.
 */
package ch.michu.tech.swissbudget.generated.jooq.tables.records;


import ch.michu.tech.swissbudget.generated.jooq.tables.TransactionTagDuplicate;
import java.util.UUID;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes", "this-escape"})
public class TransactionTagDuplicateRecord extends UpdatableRecordImpl<TransactionTagDuplicateRecord> implements
    Record4<UUID, UUID, UUID, UUID> {

    private static final long serialVersionUID = 1L;

    /**
     * Create a detached TransactionTagDuplicateRecord
     */
    public TransactionTagDuplicateRecord() {
        super(TransactionTagDuplicate.TRANSACTION_TAG_DUPLICATE);
    }

    /**
     * Create a detached, initialised TransactionTagDuplicateRecord
     */
    public TransactionTagDuplicateRecord(UUID id, UUID transactionId, UUID tagId, UUID matchingKeywordId) {
        super(TransactionTagDuplicate.TRANSACTION_TAG_DUPLICATE);

        setId(id);
        setTransactionId(transactionId);
        setTagId(tagId);
        setMatchingKeywordId(matchingKeywordId);
        resetChangedOnNotNull();
    }

    /**
     * Getter for <code>public.transaction_tag_duplicate.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.transaction_tag_duplicate.id</code>.
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.transaction_tag_duplicate.transaction_id</code>.
     */
    public UUID getTransactionId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>public.transaction_tag_duplicate.transaction_id</code>.
     */
    public void setTransactionId(UUID value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.transaction_tag_duplicate.tag_id</code>.
     */
    public UUID getTagId() {
        return (UUID) get(2);
    }

    /**
     * Setter for <code>public.transaction_tag_duplicate.tag_id</code>.
     */
    public void setTagId(UUID value) {
        set(2, value);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * Getter for
     * <code>public.transaction_tag_duplicate.matching_keyword_id</code>.
     */
    public UUID getMatchingKeywordId() {
        return (UUID) get(3);
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * Setter for
     * <code>public.transaction_tag_duplicate.matching_keyword_id</code>.
     */
    public void setMatchingKeywordId(UUID value) {
        set(3, value);
    }

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    @Override
    public Row4<UUID, UUID, UUID, UUID> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<UUID, UUID, UUID, UUID> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return TransactionTagDuplicate.TRANSACTION_TAG_DUPLICATE.ID;
    }

    @Override
    public Field<UUID> field2() {
        return TransactionTagDuplicate.TRANSACTION_TAG_DUPLICATE.TRANSACTION_ID;
    }

    @Override
    public Field<UUID> field3() {
        return TransactionTagDuplicate.TRANSACTION_TAG_DUPLICATE.TAG_ID;
    }

    @Override
    public Field<UUID> field4() {
        return TransactionTagDuplicate.TRANSACTION_TAG_DUPLICATE.MATCHING_KEYWORD_ID;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public UUID component2() {
        return getTransactionId();
    }

    @Override
    public UUID component3() {
        return getTagId();
    }

    @Override
    public UUID component4() {
        return getMatchingKeywordId();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public UUID value2() {
        return getTransactionId();
    }

    @Override
    public UUID value3() {
        return getTagId();
    }

    @Override
    public UUID value4() {
        return getMatchingKeywordId();
    }

    @Override
    public TransactionTagDuplicateRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public TransactionTagDuplicateRecord value2(UUID value) {
        setTransactionId(value);
        return this;
    }

    @Override
    public TransactionTagDuplicateRecord value3(UUID value) {
        setTagId(value);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    @Override
    public TransactionTagDuplicateRecord value4(UUID value) {
        setMatchingKeywordId(value);
        return this;
    }

    @Override
    public TransactionTagDuplicateRecord values(UUID value1, UUID value2, UUID value3, UUID value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }
}
