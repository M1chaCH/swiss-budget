/*
 * This file is generated by jOOQ.
 */
package ch.michu.tech.swissbudget.generated.jooq.tables.records;


import ch.michu.tech.swissbudget.generated.jooq.tables.Transactions;
import java.time.LocalDate;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record11;
import org.jooq.Row11;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class TransactionsRecord extends UpdatableRecordImpl<TransactionsRecord> implements
    Record11<Integer, Boolean, LocalDate, String, Double, String, Integer, Integer, String, String, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Create a detached TransactionsRecord
     */
    public TransactionsRecord() {
        super(Transactions.TRANSACTIONS);
    }

    /**
     * Create a detached, initialised TransactionsRecord
     */
    public TransactionsRecord(Integer id, Boolean expense, LocalDate transactionDate,
        String bankaccount, Double amount, String receiver, Integer tagId,
        Integer matchingKeywordId, String alias, String note, Integer userId) {
        super(Transactions.TRANSACTIONS);

        setId(id);
        setExpense(expense);
        setTransactionDate(transactionDate);
        setBankaccount(bankaccount);
        setAmount(amount);
        setReceiver(receiver);
        setTagId(tagId);
        setMatchingKeywordId(matchingKeywordId);
        setAlias(alias);
        setNote(note);
        setUserId(userId);
    }

    /**
     * Getter for <code>public.transactions.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.transactions.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.transactions.expense</code>.
     */
    public Boolean getExpense() {
        return (Boolean) get(1);
    }

    /**
     * Setter for <code>public.transactions.expense</code>.
     */
    public void setExpense(Boolean value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.transactions.transaction_date</code>.
     */
    public LocalDate getTransactionDate() {
        return (LocalDate) get(2);
    }

    /**
     * Setter for <code>public.transactions.transaction_date</code>.
     */
    public void setTransactionDate(LocalDate value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.transactions.bankaccount</code>.
     */
    public String getBankaccount() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.transactions.bankaccount</code>.
     */
    public void setBankaccount(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.transactions.amount</code>.
     */
    public Double getAmount() {
        return (Double) get(4);
    }

    /**
     * Setter for <code>public.transactions.amount</code>.
     */
    public void setAmount(Double value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.transactions.receiver</code>.
     */
    public String getReceiver() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.transactions.receiver</code>.
     */
    public void setReceiver(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.transactions.tag_id</code>.
     */
    public Integer getTagId() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>public.transactions.tag_id</code>.
     */
    public void setTagId(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.transactions.matching_keyword_id</code>.
     */
    public Integer getMatchingKeywordId() {
        return (Integer) get(7);
    }

    /**
     * Setter for <code>public.transactions.matching_keyword_id</code>.
     */
    public void setMatchingKeywordId(Integer value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.transactions.alias</code>.
     */
    public String getAlias() {
        return (String) get(8);
    }

    /**
     * Setter for <code>public.transactions.alias</code>.
     */
    public void setAlias(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.transactions.note</code>.
     */
    public String getNote() {
        return (String) get(9);
    }

    /**
     * Setter for <code>public.transactions.note</code>.
     */
    public void setNote(String value) {
        set(9, value);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * Getter for <code>public.transactions.user_id</code>.
     */
    public Integer getUserId() {
        return (Integer) get(10);
    }

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    /**
     * Setter for <code>public.transactions.user_id</code>.
     */
    public void setUserId(Integer value) {
        set(10, value);
    }

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    @Override
    public Row11<Integer, Boolean, LocalDate, String, Double, String, Integer, Integer, String, String, Integer> fieldsRow() {
        return (Row11) super.fieldsRow();
    }

    @Override
    public Row11<Integer, Boolean, LocalDate, String, Double, String, Integer, Integer, String, String, Integer> valuesRow() {
        return (Row11) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Transactions.TRANSACTIONS.ID;
    }

    @Override
    public Field<Boolean> field2() {
        return Transactions.TRANSACTIONS.EXPENSE;
    }

    @Override
    public Field<LocalDate> field3() {
        return Transactions.TRANSACTIONS.TRANSACTION_DATE;
    }

    @Override
    public Field<String> field4() {
        return Transactions.TRANSACTIONS.BANKACCOUNT;
    }

    @Override
    public Field<Double> field5() {
        return Transactions.TRANSACTIONS.AMOUNT;
    }

    @Override
    public Field<String> field6() {
        return Transactions.TRANSACTIONS.RECEIVER;
    }

    @Override
    public Field<Integer> field7() {
        return Transactions.TRANSACTIONS.TAG_ID;
    }

    @Override
    public Field<Integer> field8() {
        return Transactions.TRANSACTIONS.MATCHING_KEYWORD_ID;
    }

    @Override
    public Field<String> field9() {
        return Transactions.TRANSACTIONS.ALIAS;
    }

    @Override
    public Field<String> field10() {
        return Transactions.TRANSACTIONS.NOTE;
    }

    @Override
    public Field<Integer> field11() {
        return Transactions.TRANSACTIONS.USER_ID;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Boolean component2() {
        return getExpense();
    }

    @Override
    public LocalDate component3() {
        return getTransactionDate();
    }

    @Override
    public String component4() {
        return getBankaccount();
    }

    @Override
    public Double component5() {
        return getAmount();
    }

    @Override
    public String component6() {
        return getReceiver();
    }

    @Override
    public Integer component7() {
        return getTagId();
    }

    @Override
    public Integer component8() {
        return getMatchingKeywordId();
    }

    @Override
    public String component9() {
        return getAlias();
    }

    @Override
    public String component10() {
        return getNote();
    }

    @Override
    public Integer component11() {
        return getUserId();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Boolean value2() {
        return getExpense();
    }

    @Override
    public LocalDate value3() {
        return getTransactionDate();
    }

    @Override
    public String value4() {
        return getBankaccount();
    }

    @Override
    public Double value5() {
        return getAmount();
    }

    @Override
    public String value6() {
        return getReceiver();
    }

    @Override
    public Integer value7() {
        return getTagId();
    }

    @Override
    public Integer value8() {
        return getMatchingKeywordId();
    }

    @Override
    public String value9() {
        return getAlias();
    }

    @Override
    public String value10() {
        return getNote();
    }

    @Override
    public Integer value11() {
        return getUserId();
    }

    @Override
    public TransactionsRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public TransactionsRecord value2(Boolean value) {
        setExpense(value);
        return this;
    }

    @Override
    public TransactionsRecord value3(LocalDate value) {
        setTransactionDate(value);
        return this;
    }

    @Override
    public TransactionsRecord value4(String value) {
        setBankaccount(value);
        return this;
    }

    @Override
    public TransactionsRecord value5(Double value) {
        setAmount(value);
        return this;
    }

    @Override
    public TransactionsRecord value6(String value) {
        setReceiver(value);
        return this;
    }

    @Override
    public TransactionsRecord value7(Integer value) {
        setTagId(value);
        return this;
    }

    @Override
    public TransactionsRecord value8(Integer value) {
        setMatchingKeywordId(value);
        return this;
    }

    @Override
    public TransactionsRecord value9(String value) {
        setAlias(value);
        return this;
    }

    @Override
    public TransactionsRecord value10(String value) {
        setNote(value);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    @Override
    public TransactionsRecord value11(Integer value) {
        setUserId(value);
        return this;
    }

    @Override
    public TransactionsRecord values(Integer value1, Boolean value2, LocalDate value3,
        String value4, Double value5, String value6, Integer value7, Integer value8, String value9,
        String value10, Integer value11) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        return this;
    }
}
