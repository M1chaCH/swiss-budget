/*
 * This file is generated by jOOQ.
 */
package ch.michu.tech.swissbudget.generated.jooq.tables.records;


import ch.michu.tech.swissbudget.generated.jooq.tables.Tag;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class TagRecord extends UpdatableRecordImpl<TagRecord> implements Record6<Integer, String, String, String, String, Boolean> {

    private static final long serialVersionUID = 1L;

    /**
     * Create a detached TagRecord
     */
    public TagRecord() {
        super(Tag.TAG);
    }

    /**
     * Getter for <code>public.tag.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Create a detached, initialised TagRecord
     */
    public TagRecord(Integer id, String icon, String color, String name, String userId, Boolean defaultTag) {
        super(Tag.TAG);

        setId(id);
        setIcon(icon);
        setColor(color);
        setName(name);
        setUserId(userId);
        setDefaultTag(defaultTag);
    }

    /**
     * Getter for <code>public.tag.icon</code>.
     */
    public String getIcon() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.tag.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.tag.color</code>.
     */
    public String getColor() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.tag.name</code>.
     */
    public void setName(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.tag.name</code>.
     */
    public String getName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.tag.icon</code>.
     */
    public void setIcon(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.tag.user_id</code>.
     */
    public String getUserId() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.tag.color</code>.
     */
    public void setColor(String value) {
        set(2, value);
    }

    /**
     * Setter for <code>public.tag.user_id</code>.
     */
    public void setUserId(String value) {
        set(4, value);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    /**
     * Getter for <code>public.tag.default_tag</code>.
     */
    public Boolean getDefaultTag() {
        return (Boolean) get(5);
    }

    /**
     * Setter for <code>public.tag.default_tag</code>.
     */
    public void setDefaultTag(Boolean value) {
        set(5, value);
    }

    @Override
    public Field<Integer> field1() {
        return Tag.TAG.ID;
    }

    @Override
    public Field<String> field2() {
        return Tag.TAG.ICON;
    }

    @Override
    public Field<String> field3() {
        return Tag.TAG.COLOR;
    }

    @Override
    public Field<String> field4() {
        return Tag.TAG.NAME;
    }

    @Override
    public Row6<Integer, String, String, String, String, Boolean> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Integer, String, String, String, String, Boolean> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getIcon();
    }

    @Override
    public String component3() {
        return getColor();
    }

    @Override
    public String component4() {
        return getName();
    }

    @Override
    public Field<String> field5() {
        return Tag.TAG.USER_ID;
    }

    @Override
    public Field<Boolean> field6() {
        return Tag.TAG.DEFAULT_TAG;
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getIcon();
    }

    @Override
    public String value3() {
        return getColor();
    }

    @Override
    public String value4() {
        return getName();
    }

    @Override
    public String component5() {
        return getUserId();
    }

    @Override
    public Boolean component6() {
        return getDefaultTag();
    }

    @Override
    public TagRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public TagRecord value2(String value) {
        setIcon(value);
        return this;
    }

    @Override
    public TagRecord value3(String value) {
        setColor(value);
        return this;
    }

    @Override
    public TagRecord value4(String value) {
        setName(value);
        return this;
    }

    @Override
    public TagRecord value5(String value) {
        setUserId(value);
        return this;
    }

    @Override
    public TagRecord value6(Boolean value) {
        setDefaultTag(value);
        return this;
    }

    @Override
    public TagRecord values(Integer value1, String value2, String value3, String value4, String value5, Boolean value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    @Override
    public String value5() {
        return getUserId();
    }

    @Override
    public Boolean value6() {
        return getDefaultTag();
    }
}
