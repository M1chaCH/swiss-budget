/*
 * This file is generated by jOOQ.
 */
package ch.michu.tech.swissbudget.generated.jooq.tables.records;


import ch.michu.tech.swissbudget.generated.jooq.tables.Tags;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class TagsRecord extends UpdatableRecordImpl<TagsRecord> implements
    Record5<Integer, String, String, String, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Create a detached TagsRecord
     */
    public TagsRecord() {
        super(Tags.TAGS);
    }

    /**
     * Create a detached, initialised TagsRecord
     */
    public TagsRecord(Integer id, String icon, String color, String name, Integer userId) {
        super(Tags.TAGS);

        setId(id);
        setIcon(icon);
        setColor(color);
        setName(name);
        setUserId(userId);
    }

    /**
     * Getter for <code>public.tags.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.tags.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.tags.icon</code>.
     */
    public String getIcon() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.tags.icon</code>.
     */
    public void setIcon(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.tags.color</code>.
     */
    public String getColor() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.tags.color</code>.
     */
    public void setColor(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.tags.name</code>.
     */
    public String getName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.tags.name</code>.
     */
    public void setName(String value) {
        set(3, value);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * Getter for <code>public.tags.user_id</code>.
     */
    public Integer getUserId() {
        return (Integer) get(4);
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * Setter for <code>public.tags.user_id</code>.
     */
    public void setUserId(Integer value) {
        set(4, value);
    }

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    @Override
    public Row5<Integer, String, String, String, Integer> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Integer, String, String, String, Integer> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Tags.TAGS.ID;
    }

    @Override
    public Field<String> field2() {
        return Tags.TAGS.ICON;
    }

    @Override
    public Field<String> field3() {
        return Tags.TAGS.COLOR;
    }

    @Override
    public Field<String> field4() {
        return Tags.TAGS.NAME;
    }

    @Override
    public Field<Integer> field5() {
        return Tags.TAGS.USER_ID;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getIcon();
    }

    @Override
    public String component3() {
        return getColor();
    }

    @Override
    public String component4() {
        return getName();
    }

    @Override
    public Integer component5() {
        return getUserId();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getIcon();
    }

    @Override
    public String value3() {
        return getColor();
    }

    @Override
    public String value4() {
        return getName();
    }

    @Override
    public Integer value5() {
        return getUserId();
    }

    @Override
    public TagsRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public TagsRecord value2(String value) {
        setIcon(value);
        return this;
    }

    @Override
    public TagsRecord value3(String value) {
        setColor(value);
        return this;
    }

    @Override
    public TagsRecord value4(String value) {
        setName(value);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    @Override
    public TagsRecord value5(Integer value) {
        setUserId(value);
        return this;
    }

    @Override
    public TagsRecord values(Integer value1, String value2, String value3, String value4,
        Integer value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }
}
