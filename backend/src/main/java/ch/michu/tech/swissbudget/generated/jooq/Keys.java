/*
 * This file is generated by jOOQ.
 */
package ch.michu.tech.swissbudget.generated.jooq;


import ch.michu.tech.swissbudget.generated.jooq.tables.Keywords;
import ch.michu.tech.swissbudget.generated.jooq.tables.Sessions;
import ch.michu.tech.swissbudget.generated.jooq.tables.Tags;
import ch.michu.tech.swissbudget.generated.jooq.tables.TransactionMails;
import ch.michu.tech.swissbudget.generated.jooq.tables.Transactions;
import ch.michu.tech.swissbudget.generated.jooq.tables.Users;
import ch.michu.tech.swissbudget.generated.jooq.tables.records.KeywordsRecord;
import ch.michu.tech.swissbudget.generated.jooq.tables.records.SessionsRecord;
import ch.michu.tech.swissbudget.generated.jooq.tables.records.TagsRecord;
import ch.michu.tech.swissbudget.generated.jooq.tables.records.TransactionMailsRecord;
import ch.michu.tech.swissbudget.generated.jooq.tables.records.TransactionsRecord;
import ch.michu.tech.swissbudget.generated.jooq.tables.records.UsersRecord;
import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in public.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<KeywordsRecord> KEYWORDS_PKEY = Internal.createUniqueKey(
        Keywords.KEYWORDS, DSL.name("keywords_pkey"), new TableField[]{Keywords.KEYWORDS.ID}, true);
    public static final UniqueKey<SessionsRecord> SESSIONS_PKEY = Internal.createUniqueKey(
        Sessions.SESSIONS, DSL.name("sessions_pkey"), new TableField[]{Sessions.SESSIONS.ID}, true);
    public static final UniqueKey<SessionsRecord> SESSIONS_SESSION_ID_KEY = Internal.createUniqueKey(
        Sessions.SESSIONS, DSL.name("sessions_session_id_key"),
        new TableField[]{Sessions.SESSIONS.SESSION_ID}, true);
    public static final UniqueKey<SessionsRecord> SESSIONS_USER_ID_KEY = Internal.createUniqueKey(
        Sessions.SESSIONS, DSL.name("sessions_user_id_key"),
        new TableField[]{Sessions.SESSIONS.USER_ID}, true);
    public static final UniqueKey<TagsRecord> TAGS_PKEY = Internal.createUniqueKey(Tags.TAGS,
        DSL.name("tags_pkey"), new TableField[]{Tags.TAGS.ID}, true);
    public static final UniqueKey<TransactionMailsRecord> TRANSACTION_MAILS_PKEY = Internal.createUniqueKey(
        TransactionMails.TRANSACTION_MAILS, DSL.name("transaction_mails_pkey"),
        new TableField[]{TransactionMails.TRANSACTION_MAILS.ID}, true);
    public static final UniqueKey<TransactionsRecord> TRANSACTIONS_PKEY = Internal.createUniqueKey(
        Transactions.TRANSACTIONS, DSL.name("transactions_pkey"),
        new TableField[]{Transactions.TRANSACTIONS.ID}, true);
    public static final UniqueKey<UsersRecord> USERS_MAIL_KEY = Internal.createUniqueKey(
        Users.USERS, DSL.name("users_mail_key"), new TableField[]{Users.USERS.MAIL}, true);
    public static final UniqueKey<UsersRecord> USERS_PKEY = Internal.createUniqueKey(Users.USERS,
        DSL.name("users_pkey"), new TableField[]{Users.USERS.ID}, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<KeywordsRecord, TagsRecord> KEYWORDS__KEYWORDS_TAG_ID_FKEY = Internal.createForeignKey(
        Keywords.KEYWORDS, DSL.name("keywords_tag_id_fkey"),
        new TableField[]{Keywords.KEYWORDS.TAG_ID}, Keys.TAGS_PKEY, new TableField[]{Tags.TAGS.ID},
        true);
    public static final ForeignKey<KeywordsRecord, UsersRecord> KEYWORDS__KEYWORDS_USER_ID_FKEY = Internal.createForeignKey(
        Keywords.KEYWORDS, DSL.name("keywords_user_id_fkey"),
        new TableField[]{Keywords.KEYWORDS.USER_ID}, Keys.USERS_PKEY,
        new TableField[]{Users.USERS.ID}, true);
    public static final ForeignKey<SessionsRecord, UsersRecord> SESSIONS__SESSIONS_USER_ID_FKEY = Internal.createForeignKey(
        Sessions.SESSIONS, DSL.name("sessions_user_id_fkey"),
        new TableField[]{Sessions.SESSIONS.USER_ID}, Keys.USERS_PKEY,
        new TableField[]{Users.USERS.ID}, true);
    public static final ForeignKey<TagsRecord, UsersRecord> TAGS__TAGS_USER_ID_FKEY = Internal.createForeignKey(
        Tags.TAGS, DSL.name("tags_user_id_fkey"), new TableField[]{Tags.TAGS.USER_ID},
        Keys.USERS_PKEY, new TableField[]{Users.USERS.ID}, true);
    public static final ForeignKey<TransactionMailsRecord, TransactionsRecord> TRANSACTION_MAILS__TRANSACTION_MAILS_TRANSACTION_ID_FKEY = Internal.createForeignKey(
        TransactionMails.TRANSACTION_MAILS, DSL.name("transaction_mails_transaction_id_fkey"),
        new TableField[]{TransactionMails.TRANSACTION_MAILS.TRANSACTION_ID}, Keys.TRANSACTIONS_PKEY,
        new TableField[]{Transactions.TRANSACTIONS.ID}, true);
    public static final ForeignKey<TransactionMailsRecord, UsersRecord> TRANSACTION_MAILS__TRANSACTION_MAILS_USER_ID_FKEY = Internal.createForeignKey(
        TransactionMails.TRANSACTION_MAILS, DSL.name("transaction_mails_user_id_fkey"),
        new TableField[]{TransactionMails.TRANSACTION_MAILS.USER_ID}, Keys.USERS_PKEY,
        new TableField[]{Users.USERS.ID}, true);
    public static final ForeignKey<TransactionsRecord, KeywordsRecord> TRANSACTIONS__TRANSACTIONS_MATCHING_KEYWORD_ID_FKEY = Internal.createForeignKey(
        Transactions.TRANSACTIONS, DSL.name("transactions_matching_keyword_id_fkey"),
        new TableField[]{Transactions.TRANSACTIONS.MATCHING_KEYWORD_ID}, Keys.KEYWORDS_PKEY,
        new TableField[]{Keywords.KEYWORDS.ID}, true);
    public static final ForeignKey<TransactionsRecord, TagsRecord> TRANSACTIONS__TRANSACTIONS_TAG_ID_FKEY = Internal.createForeignKey(
        Transactions.TRANSACTIONS, DSL.name("transactions_tag_id_fkey"),
        new TableField[]{Transactions.TRANSACTIONS.TAG_ID}, Keys.TAGS_PKEY,
        new TableField[]{Tags.TAGS.ID}, true);
    public static final ForeignKey<TransactionsRecord, UsersRecord> TRANSACTIONS__TRANSACTIONS_USER_ID_FKEY = Internal.createForeignKey(
        Transactions.TRANSACTIONS, DSL.name("transactions_user_id_fkey"),
        new TableField[]{Transactions.TRANSACTIONS.USER_ID}, Keys.USERS_PKEY,
        new TableField[]{Users.USERS.ID}, true);
}
